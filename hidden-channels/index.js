(function(r,s,a,h,C,P){"use strict";const{View:R,Text:f,Pressable:E}=h.findByProps("Button","Text","View"),y=h.findByProps("extractTimestamp"),l=a.stylesheet.createThemedStyleSheet({container:{flex:1,padding:16,alignItems:"center",justifyContent:"center"},title:{fontFamily:a.constants.Fonts.PRIMARY_SEMIBOLD,fontSize:24,textAlign:"left",color:C.semanticColors.HEADER_PRIMARY,paddingVertical:25},text:{flex:1,flexDirection:"row",fontSize:16,textAlign:"justify",color:C.semanticColors.HEADER_PRIMARY},dateContainer:{height:16,alignSelf:"baseline"}});function u(e){let{date:n}=e;return React.createElement(E,{style:l.dateContainer,onPress:function(){a.toasts.open({content:a.moment(n).toLocaleString(),source:P.getAssetByName("clock").id})},onLongPress:function(){a.clipboard.setString(n.getTime().toString()),a.toasts.open({content:"Copied to clipboard"})}},React.createElement(f,{style:l.text},a.moment(n).fromNow()))}function T(e){let{channel:n}=e;return React.createElement(R,{style:l.container},React.createElement(f,{style:l.title},"This channel is hidden."),React.createElement(f,{style:l.text},"Topic: ",n.topic||"No topic.",`

`,"Creation date: ",React.createElement(u,{date:new Date(y.extractTimestamp(n.id))}),`

`,"Last message: ",n.lastMessageId?React.createElement(u,{date:new Date(y.extractTimestamp(n.lastMessageId))}):"No messages.",`

`,"Last pin: ",n.lastPinTimestamp?React.createElement(u,{date:new Date(n.lastPinTimestamp)}):"No pins."))}let c=[];const m=s.findByProps("getChannelPermissions","can"),M=s.findByProps("transitionToGuild"),x=s.findByProps("stores","fetchMessages"),{ChannelTypes:g}=s.findByProps("ChannelTypes"),{getChannel:B}=s.findByProps("getChannel"),H=[g.DM,g.GROUP_DM,g.GUILD_CATEGORY];function p(e){if(!e||(typeof e=="string"&&(e=B(e)),!e||H.includes(e.type)))return!1;e.realCheck=!0;const n=!m.can(a.constants.Permissions.VIEW_CHANNEL,e);return delete e.realCheck,console.log(`isHidden: channel ${e?.id} hidden? ${n}`),n}function I(){const e=["MessagesWrapperConnected","ChannelReader","MessagesList","ChannelMessages"];let n=null;for(const t of e)if(n=s.findByName(t,!1),n){console.log(`Hidden Channels plugin: Found candidate component: ${t}`);break}else console.log(`Hidden Channels plugin: Candidate ${t} not found.`);n?c.push(s.instead("default",n,function(t,i){const o=t[0]?.channel;return!p(o)&&typeof i=="function"?i(...t):(console.log("Hidden Channels plugin: Rendering HiddenChannel UI for channel:",o?.id),a.React.createElement(T,{channel:o}))})):console.error("Hidden Channels plugin: No suitable messages component found. Plugin enabled but will not patch UI."),c.push(s.after("can",m,function(t,i){let[o,d]=t;return!d?.realCheck&&o===a.constants.Permissions.VIEW_CHANNEL?!0:i})),c.push(s.instead("transitionToGuild",M,function(t,i){const[o,d]=t;!p(d)&&typeof i=="function"?i(t):console.log("Hidden Channels plugin: Blocked navigation to hidden channel:",d?.id)})),c.push(s.instead("fetchMessages",x,function(t,i){const[o]=t;!p(o)&&typeof i=="function"?i(t):console.log("Hidden Channels plugin: Blocked fetching messages for hidden channel:",o?.id)}))}function A(){for(const e of c)e()}var N={onLoad:I,onUnload:A};return r.default=N,Object.defineProperty(r,"__esModule",{value:!0}),r})({},vendetta.patcher,vendetta.metro.common,vendetta.metro,vendetta.ui,vendetta.ui.assets);
